#include <iostream>
#include <stdio.h>
#include <ctype.h>
#include "Node.h"

void print();
void deleteS();
void add();


Node* head = NULL;

int main() {
  bool quit = false;
  while (quit == false) {
   cout << "Welcome to the SHS Student Database!" << endl;
   cout << "Would you like to add a student, print a list of students, or remove a student? (A = add, P = print, R = remove)" << endl;
    char response[2];
    response[0] = cin.get();
    cin.ignore(100, '\n');
    tolower(response[0]);
    while (response[0] != 'a' && response[0] != 'p' && response[0] != 'q') {
      cout << "Sorry that is not a valid command!" << endl;
      cout << "You can either Add, Search, or Quit!" << endl;
      response[0] = cin.get();
      cin.ignore(100, '\n');
      tolower(response[0]);
    }
    if (response[0] == 'a') {
      add();
    }
    else if (response[0] == 'p') {
      print();
    }
    else if (response[0] == 'd') {
      deleteS();
    }
    else {
      quit = true;
    }
  }
  return 0;
}


void add() {
  Node* current = head;
  cout << endl <<  "Welcome to the Add Student Screen" << endl;
  cout << "Please start by giving us the first name of the student!" << endl;
  char* fname = new char[100];
  cin.get(fname, 99);
  cin.ignore(1000, '\n');
  cout << "What is the last name of the student?" << endl;
  char* lname = new char[100];
  cin.get(lname, 99);
  cin.ignore(1000, '\n');
  cout << "What is this student's ID number?" << endl;
  int id = 0;
  while (!(cin >> id))  {
     cin.clear();
     cin.ignore(1000, '\n');
     cout << "Invalid input, please enter a number" << endl;
  }
  cout << "What is this student's GPA? (Rounded to 2 decimal places)" << endl;
  float gpa = 0;
  while (!(cin >> gpa)) {
    cin.clear();
    cin.ignore(1000, '\n');
    cout << "Invalid GPA, please enter a number rounded to 2 decimal places";
  }
  cout << "This student has been successfully added!" << endl << endl;
  Student* x = new Student();
  x->firstName = fname;
  x->lastName = lname;
  x->studentID = id;
  x->GPA = gpa;
  if (current == NULL) {
    head = new Node();
    head->setValue(x);
  }
  else {
    while (current->getNext() != NULL) {
      current = current->getNext();
    }
    current->setNext(new Node());
    current->getNext()->setValue(x);
  }
}

void print() {
  Node* current = head;
  cout << current->getValue()->firstName << " " << current->getValue()->lastName << ", "; 
  cout << current->getValue()->studentID << ", " << current->getValue()->GPA << endl;
}

void deleteS() {

}
